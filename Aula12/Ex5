import java.util.HashSet;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Set;
import java.util.Stack;

public class Fila {
    private Queue<Integer> fila;

    public Fila() {
        fila = new LinkedList<>();
    }

    public void enqueue(int elemento) {
        fila.add(elemento);
    }

    public int dequeue() {
        return fila.poll();
    }

    public boolean contains(int elemento) {
        return fila.contains(elemento);
    }

    public boolean isEmpty() {
        return fila.isEmpty();
    }

    @Override
    public String toString() {
        return fila.toString();
    }
}

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Fila fila = new Fila();
        Stack<Integer> pilha = new Stack<>();
        Set<Integer> conjuntoFila = new HashSet<>();

        System.out.println("Insira números na fila. Digite 'sair' para parar:");

        while (true) {
            System.out.print("Digite um número: ");
            String input = scanner.nextLine();

            if (input.equalsIgnoreCase("sair")) {
                break;
            }

            try {
                int numero = Integer.parseInt(input);

                if (conjuntoFila.contains(numero)) {
                    pilha.push(numero);
                } else {
                    fila.enqueue(numero);
                    conjuntoFila.add(numero);
                }
            } catch (NumberFormatException e) {
                System.out.println("Entrada inválida. Por favor, digite um número inteiro.");
            }
        }

        scanner.close();

        System.out.println("Fila F: " + fila);
        System.out.println("Pilha P: " + pilha);
    }
}
